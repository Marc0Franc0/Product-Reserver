version: '3.8'
services:
  discovery-service:
    container_name: discovery-service-container
    #build: DiscoveryService/.
    image: marc0franc0/product-reserver_discovery-service:1.0.0
    ports:
      - "8761:8761"
    restart: always
    environment:
      eureka.instance.hostname: discovery-service
  config-server:
    container_name: config-server-container
    #build: ConfigServer/.
    image: marc0franc0/product-reserver_config-server:1.0.0
    ports:
      - "8888:8888"
    restart: always
  api-gateway:
    container_name: api-gateway-container
    ports:
      - "8080:8080"
    #build: ApiGateway/.
    image: marc0franc0/product-reserver_api-gateway:1.0.0
    links:
      - discovery-service
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka/
    restart: always
  product-microservice:
    container_name: product-microservice-container
    #build: ProductMicroservice/.
    image: marc0franc0/product-reserver_product-microservice:1.0.0
    restart: always
    links:
      - config-server
      - rabbitmq
      - mongo
      - discovery-service
    environment:
      #SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/productdb
      SPRING_DATA_MONGODB_URI: mongodb+srv://user:root@product-microservice.lnagmig.mongodb.net/?retryWrites=true&w=majority
      SPRING_DATA_MONGODB_DATABASE: product_db
      SPRING_CLOUD_CONFIG_PROFILE: prod
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_PASSWORD: guest
      SPRING_RABBITMQ_USERNAME: guest
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka/
  stock-microservice:
    container_name: stock-microservice-container
    #build: StockMicroservice/.
    image: marc0franc0/product-reserver_stock-microservice:1.0.0
    restart: always
    links:
      - config-server
      - stock-mysql
      - rabbitmq
      - discovery-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://stock-mysql:3306/stock_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_CLOUD_CONFIG_PROFILE: prod
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_PASSWORD: guest
      SPRING_RABBITMQ_USERNAME: guest
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka/
  booking-microservice:
    container_name: booking-microservice-container
    #build: BookingMicroservice/.
    image: marc0franc0/product-reserver_booking-microservice:1.0.0
    restart: always
    links:
      - config-server
      - booking-mysql
      - rabbitmq
      - discovery-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://booking-mysql:3306/booking_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_CLOUD_CONFIG_PROFILE: prod
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_PASSWORD: guest
      SPRING_RABBITMQ_USERNAME: guest
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka/
  rabbitmq:
    image: rabbitmq:management
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
  mongo:
    container_name: mongo-container
    image: mongo:latest
    hostname: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodb:/data/db
  booking-mysql:
    container_name: booking-mysql-container
    image: mysql:8.0.26
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: booking_db
    ports:
      - "3306:3306"
    volumes:
      - mysql:/data/db
  stock-mysql:
    container_name: stock-mysql-container
    image: mysql:8.0.26
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: stock_db
    ports:
      - "3307:3306"
    volumes:
      - mysql:/data/db
volumes:
  mongodb:
  mysql: